{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.7.6","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":1760012,"sourceType":"datasetVersion","datasetId":1046158}],"dockerImageVersionId":30042,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false},"colab":{"provenance":[{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/croprecommender-c6f4de3f-8cef-4575-aa16-9d7b074c6100.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20240415/auto/storage/goog4_request&X-Goog-Date=20240415T083821Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=b39a6e5b94611b7743c8cb75aa2e98edf2f74c700dc674df7b32ac35d91e54146739f9cb13164843cdb65692b6eb5c23a73f1e3337c5d13f692c4120e7094d1c866967d87a9fd68dbd2f6e32361ab048f33d6be8adbddf2dad5eb8e261d394f3e4c78c28d52d20f37641c1060cbdb26c8a9709d3993a8b1e9f66e2d4de62d5d6d9159c11fbd7fac7da389df63f8ad393910ed45fef0d7c152c1565656293af3832f27907f26a4a792611ddc5837361eb819e3605ea5f4b28727066dc15132af3e71e3c4bf789df2387c14ad0d329585f531c294e22143c62e99fc4cb581e240e5c09938d87e7aef83b10d0ce5213c6fc01dc6773ee955f3eb3db3a77b9f5c657","timestamp":1713170452902}]}},"nbformat_minor":0,"nbformat":4,"cells":[{"cell_type":"markdown","source":["# CROP RECOMMENDATION SYSTEM"],"metadata":{"id":"aV_2fO8e6DQw"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"zP91U2OY8k6c","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1738160039224,"user_tz":-330,"elapsed":4455,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}},"outputId":"8ccdc916-4a36-4ab7-fb44-e16c3d02dd06"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["# Importing libraries\n","\n","from __future__ import print_function\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.metrics import classification_report\n","from sklearn import metrics\n","from sklearn import tree\n","import warnings\n","warnings.filterwarnings('ignore')"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:24:12.380448Z","iopub.execute_input":"2024-03-12T19:24:12.380806Z","iopub.status.idle":"2024-03-12T19:24:13.63988Z","shell.execute_reply.started":"2024-03-12T19:24:12.380774Z","shell.execute_reply":"2024-03-12T19:24:13.638849Z"},"trusted":true,"id":"NEYmKGHJ6DQz","executionInfo":{"status":"ok","timestamp":1738160039224,"user_tz":-330,"elapsed":52,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["PATH = '/content/drive/MyDrive/crp_rec_wt_season (4).csv'\n","df = pd.read_csv(PATH)"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:24:13.642513Z","iopub.execute_input":"2024-03-12T19:24:13.643019Z","iopub.status.idle":"2024-03-12T19:24:13.66989Z","shell.execute_reply.started":"2024-03-12T19:24:13.642973Z","shell.execute_reply":"2024-03-12T19:24:13.669015Z"},"trusted":true,"id":"iB2SB0pH6DQz","executionInfo":{"status":"ok","timestamp":1738160039224,"user_tz":-330,"elapsed":51,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:24:13.671254Z","iopub.execute_input":"2024-03-12T19:24:13.67157Z","iopub.status.idle":"2024-03-12T19:24:13.699575Z","shell.execute_reply.started":"2024-03-12T19:24:13.671541Z","shell.execute_reply":"2024-03-12T19:24:13.698814Z"},"trusted":true,"id":"LuBf8KCa6DQ0","executionInfo":{"status":"ok","timestamp":1738160039225,"user_tz":-330,"elapsed":51,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}},"colab":{"base_uri":"https://localhost:8080/","height":224},"outputId":"fc6f4e67-0486-4df9-8f54-adec69811359"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   temperature   humidity  water availability  season label  Unnamed: 5  \\\n","0    20.879744  82.002744          202.935536       1  rice         NaN   \n","1    21.770462  80.319644          226.655537       1  rice         NaN   \n","2    23.004459  82.320763          263.964248       1  rice         NaN   \n","3    26.491096  80.158363          242.864034       1  rice         NaN   \n","4    20.130175  81.604873          262.717340       1  rice         NaN   \n","\n","   Unnamed: 6  Unnamed: 7  Unnamed: 8  Unnamed: 9  Unnamed: 10  Unnamed: 11  \\\n","0         NaN         NaN         NaN         NaN          NaN          NaN   \n","1         NaN         NaN         NaN         NaN          NaN          NaN   \n","2         NaN         NaN         NaN         NaN          NaN          NaN   \n","3         NaN         NaN         NaN         NaN          NaN          NaN   \n","4         NaN         NaN         NaN         NaN          NaN          NaN   \n","\n","   Unnamed: 12  Unnamed: 13  Unnamed: 14  Unnamed: 15 Unnamed: 16  \n","0          NaN          NaN          NaN          NaN         NaN  \n","1          NaN          NaN          NaN          NaN         NaN  \n","2          NaN          NaN          NaN          NaN         NaN  \n","3          NaN          NaN          NaN          NaN         NaN  \n","4          NaN          NaN          NaN          NaN         NaN  "],"text/html":["\n","  <div id=\"df-f15a825f-3704-4d42-aac1-6cfb7267df29\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>temperature</th>\n","      <th>humidity</th>\n","      <th>water availability</th>\n","      <th>season</th>\n","      <th>label</th>\n","      <th>Unnamed: 5</th>\n","      <th>Unnamed: 6</th>\n","      <th>Unnamed: 7</th>\n","      <th>Unnamed: 8</th>\n","      <th>Unnamed: 9</th>\n","      <th>Unnamed: 10</th>\n","      <th>Unnamed: 11</th>\n","      <th>Unnamed: 12</th>\n","      <th>Unnamed: 13</th>\n","      <th>Unnamed: 14</th>\n","      <th>Unnamed: 15</th>\n","      <th>Unnamed: 16</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20.879744</td>\n","      <td>82.002744</td>\n","      <td>202.935536</td>\n","      <td>1</td>\n","      <td>rice</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>21.770462</td>\n","      <td>80.319644</td>\n","      <td>226.655537</td>\n","      <td>1</td>\n","      <td>rice</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>23.004459</td>\n","      <td>82.320763</td>\n","      <td>263.964248</td>\n","      <td>1</td>\n","      <td>rice</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>26.491096</td>\n","      <td>80.158363</td>\n","      <td>242.864034</td>\n","      <td>1</td>\n","      <td>rice</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20.130175</td>\n","      <td>81.604873</td>\n","      <td>262.717340</td>\n","      <td>1</td>\n","      <td>rice</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f15a825f-3704-4d42-aac1-6cfb7267df29')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f15a825f-3704-4d42-aac1-6cfb7267df29 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f15a825f-3704-4d42-aac1-6cfb7267df29');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ef40f940-c2e9-40d5-ab1d-fff2446b1e06\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ef40f940-c2e9-40d5-ab1d-fff2446b1e06')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ef40f940-c2e9-40d5-ab1d-fff2446b1e06 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 900,\n  \"fields\": [\n    {\n      \"column\": \"temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.718295201189099,\n        \"min\": 15.33042636,\n        \"max\": 36.97794384,\n        \"num_unique_values\": 900,\n        \"samples\": [\n          24.97669518,\n          22.99451999,\n          17.22385224\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"humidity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23.155589524175912,\n        \"min\": 14.25803981,\n        \"max\": 89.99615558,\n        \"num_unique_values\": 900,\n        \"samples\": [\n          83.891805,\n          66.70897237,\n          15.82069268\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"water availability\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 61.57293275094195,\n        \"min\": 30.92014047,\n        \"max\": 298.5601175,\n        \"num_unique_values\": 900,\n        \"samples\": [\n          204.8001847,\n          54.49044154,\n          76.57580954\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"season\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          4,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"blackgram\",\n          \"maize\",\n          \"mothbeans\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 6\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 7\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 8\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 10\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 11\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 12\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 13\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 14\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 15\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 16\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df.tail()"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:24:13.700704Z","iopub.execute_input":"2024-03-12T19:24:13.701138Z","iopub.status.idle":"2024-03-12T19:24:13.716479Z","shell.execute_reply.started":"2024-03-12T19:24:13.701106Z","shell.execute_reply":"2024-03-12T19:24:13.715161Z"},"trusted":true,"id":"Bk75EUvS6DQ0","executionInfo":{"status":"ok","timestamp":1738160039225,"user_tz":-330,"elapsed":47,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}},"colab":{"base_uri":"https://localhost:8080/","height":224},"outputId":"993734af-d3c7-42e5-bf2d-04757cca8d0d"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     temperature   humidity  water availability  season   label  Unnamed: 5  \\\n","895    23.052764  60.424786           52.602853       1  lentil         NaN   \n","896    21.658458  63.583371           38.076594       1  lentil         NaN   \n","897    26.250703  67.627797           40.810630       1  lentil         NaN   \n","898    20.971953  63.831799           53.102079       1  lentil         NaN   \n","899    23.897364  66.321020           40.745368       1  lentil         NaN   \n","\n","     Unnamed: 6  Unnamed: 7  Unnamed: 8  Unnamed: 9  Unnamed: 10  Unnamed: 11  \\\n","895         NaN         NaN         NaN         NaN          NaN          NaN   \n","896         NaN         NaN         NaN         NaN          NaN          NaN   \n","897         NaN         NaN         NaN         NaN          NaN          NaN   \n","898         NaN         NaN         NaN         NaN          NaN          NaN   \n","899         NaN         NaN         NaN         NaN          NaN          NaN   \n","\n","     Unnamed: 12  Unnamed: 13  Unnamed: 14  Unnamed: 15 Unnamed: 16  \n","895          NaN          NaN          NaN          NaN         NaN  \n","896          NaN          NaN          NaN          NaN         NaN  \n","897          NaN          NaN          NaN          NaN         NaN  \n","898          NaN          NaN          NaN          NaN         NaN  \n","899          NaN          NaN          NaN          NaN         NaN  "],"text/html":["\n","  <div id=\"df-c3073e3a-9283-4537-bedb-1d61b4004c57\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>temperature</th>\n","      <th>humidity</th>\n","      <th>water availability</th>\n","      <th>season</th>\n","      <th>label</th>\n","      <th>Unnamed: 5</th>\n","      <th>Unnamed: 6</th>\n","      <th>Unnamed: 7</th>\n","      <th>Unnamed: 8</th>\n","      <th>Unnamed: 9</th>\n","      <th>Unnamed: 10</th>\n","      <th>Unnamed: 11</th>\n","      <th>Unnamed: 12</th>\n","      <th>Unnamed: 13</th>\n","      <th>Unnamed: 14</th>\n","      <th>Unnamed: 15</th>\n","      <th>Unnamed: 16</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>895</th>\n","      <td>23.052764</td>\n","      <td>60.424786</td>\n","      <td>52.602853</td>\n","      <td>1</td>\n","      <td>lentil</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>896</th>\n","      <td>21.658458</td>\n","      <td>63.583371</td>\n","      <td>38.076594</td>\n","      <td>1</td>\n","      <td>lentil</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>897</th>\n","      <td>26.250703</td>\n","      <td>67.627797</td>\n","      <td>40.810630</td>\n","      <td>1</td>\n","      <td>lentil</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>898</th>\n","      <td>20.971953</td>\n","      <td>63.831799</td>\n","      <td>53.102079</td>\n","      <td>1</td>\n","      <td>lentil</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>899</th>\n","      <td>23.897364</td>\n","      <td>66.321020</td>\n","      <td>40.745368</td>\n","      <td>1</td>\n","      <td>lentil</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c3073e3a-9283-4537-bedb-1d61b4004c57')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c3073e3a-9283-4537-bedb-1d61b4004c57 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c3073e3a-9283-4537-bedb-1d61b4004c57');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2a3ecbf7-7c0b-488c-9e23-0d6df809d376\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2a3ecbf7-7c0b-488c-9e23-0d6df809d376')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2a3ecbf7-7c0b-488c-9e23-0d6df809d376 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"0"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df.size"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:24:18.752426Z","iopub.execute_input":"2024-03-12T19:24:18.752874Z","iopub.status.idle":"2024-03-12T19:24:18.760168Z","shell.execute_reply.started":"2024-03-12T19:24:18.752839Z","shell.execute_reply":"2024-03-12T19:24:18.758989Z"},"trusted":true,"id":"kanuWW5R6DQ0","executionInfo":{"status":"ok","timestamp":1738160039225,"user_tz":-330,"elapsed":44,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"0a331d0e-ec44-4885-c39f-2555349a8937"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["15300"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df.shape"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:24:23.151005Z","iopub.execute_input":"2024-03-12T19:24:23.151615Z","iopub.status.idle":"2024-03-12T19:24:23.158865Z","shell.execute_reply.started":"2024-03-12T19:24:23.151572Z","shell.execute_reply":"2024-03-12T19:24:23.157528Z"},"trusted":true,"id":"RsdvorC66DQ1","executionInfo":{"status":"ok","timestamp":1738160039226,"user_tz":-330,"elapsed":40,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"09386bd9-1617-4fd5-e6d7-625981a90ff7"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(900, 17)"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["df.columns"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:24:24.698877Z","iopub.execute_input":"2024-03-12T19:24:24.699628Z","iopub.status.idle":"2024-03-12T19:24:24.706267Z","shell.execute_reply.started":"2024-03-12T19:24:24.699572Z","shell.execute_reply":"2024-03-12T19:24:24.705019Z"},"trusted":true,"id":"-c9XnO-T6DQ1","executionInfo":{"status":"ok","timestamp":1738160039226,"user_tz":-330,"elapsed":37,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"d20d08d4-4285-4546-b27b-83a7e17b96f2"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['temperature', 'humidity', 'water availability', 'season', 'label',\n","       'Unnamed: 5', 'Unnamed: 6', 'Unnamed: 7', 'Unnamed: 8', 'Unnamed: 9',\n","       'Unnamed: 10', 'Unnamed: 11', 'Unnamed: 12', 'Unnamed: 13',\n","       'Unnamed: 14', 'Unnamed: 15', 'Unnamed: 16'],\n","      dtype='object')"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df['label'].unique()"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:24:27.693941Z","iopub.execute_input":"2024-03-12T19:24:27.69474Z","iopub.status.idle":"2024-03-12T19:24:27.703463Z","shell.execute_reply.started":"2024-03-12T19:24:27.694687Z","shell.execute_reply":"2024-03-12T19:24:27.702463Z"},"trusted":true,"id":"Jiw-gLm76DQ1","executionInfo":{"status":"ok","timestamp":1738160039226,"user_tz":-330,"elapsed":34,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"54e7e83a-de6b-426a-f5bc-708d7d76dcdc"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['rice', 'maize', 'chickpea', 'kidneybeans', 'pigeonpeas',\n","       'mothbeans', 'mungbean', 'blackgram', 'lentil'], dtype=object)"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["df.dtypes"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:24:30.600666Z","iopub.execute_input":"2024-03-12T19:24:30.601055Z","iopub.status.idle":"2024-03-12T19:24:30.610954Z","shell.execute_reply.started":"2024-03-12T19:24:30.601023Z","shell.execute_reply":"2024-03-12T19:24:30.609674Z"},"trusted":true,"id":"HSSG0AEX6DQ2","executionInfo":{"status":"ok","timestamp":1738160039226,"user_tz":-330,"elapsed":31,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}},"colab":{"base_uri":"https://localhost:8080/","height":617},"outputId":"0d0c26eb-1719-4b6e-a7b9-22ac9343bce9"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["temperature           float64\n","humidity              float64\n","water availability    float64\n","season                  int64\n","label                  object\n","Unnamed: 5            float64\n","Unnamed: 6            float64\n","Unnamed: 7            float64\n","Unnamed: 8            float64\n","Unnamed: 9            float64\n","Unnamed: 10           float64\n","Unnamed: 11           float64\n","Unnamed: 12           float64\n","Unnamed: 13           float64\n","Unnamed: 14           float64\n","Unnamed: 15           float64\n","Unnamed: 16            object\n","dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>temperature</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>humidity</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>water availability</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>season</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>label</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Unnamed: 5</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Unnamed: 6</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Unnamed: 7</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Unnamed: 8</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Unnamed: 9</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Unnamed: 10</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Unnamed: 11</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Unnamed: 12</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Unnamed: 13</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Unnamed: 14</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Unnamed: 15</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>Unnamed: 16</th>\n","      <td>object</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["df['label'].value_counts()"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:24:34.400149Z","iopub.execute_input":"2024-03-12T19:24:34.400589Z","iopub.status.idle":"2024-03-12T19:24:34.411913Z","shell.execute_reply.started":"2024-03-12T19:24:34.400552Z","shell.execute_reply":"2024-03-12T19:24:34.410346Z"},"trusted":true,"id":"85EqTjhX6DQ2","executionInfo":{"status":"ok","timestamp":1738160039226,"user_tz":-330,"elapsed":30,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}},"colab":{"base_uri":"https://localhost:8080/","height":398},"outputId":"75d430aa-ef04-4fcd-cce3-03a0cc026956"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["label\n","rice           100\n","maize          100\n","chickpea       100\n","kidneybeans    100\n","pigeonpeas     100\n","mothbeans      100\n","mungbean       100\n","blackgram      100\n","lentil         100\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>label</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>rice</th>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>maize</th>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>chickpea</th>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>kidneybeans</th>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>pigeonpeas</th>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>mothbeans</th>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>mungbean</th>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>blackgram</th>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>lentil</th>\n","      <td>100</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["### Seperating features and target label"],"metadata":{"id":"WLGOglsu6DQ2"}},{"cell_type":"code","source":["features = df[['temperature', 'humidity','water availability','season']]\n","target = df['label']\n","labels = df['label']"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:24:42.488252Z","iopub.execute_input":"2024-03-12T19:24:42.488671Z","iopub.status.idle":"2024-03-12T19:24:42.495837Z","shell.execute_reply.started":"2024-03-12T19:24:42.488635Z","shell.execute_reply":"2024-03-12T19:24:42.494701Z"},"trusted":true,"id":"ugU65QRn6DQ3","executionInfo":{"status":"ok","timestamp":1738160039227,"user_tz":-330,"elapsed":29,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["# Initializing empty lists to append all model's name and corresponding name\n","acc = []\n","model = []"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:24:46.726958Z","iopub.execute_input":"2024-03-12T19:24:46.727396Z","iopub.status.idle":"2024-03-12T19:24:46.73232Z","shell.execute_reply.started":"2024-03-12T19:24:46.727348Z","shell.execute_reply":"2024-03-12T19:24:46.731227Z"},"trusted":true,"id":"WFObRzW-6DQ3","executionInfo":{"status":"ok","timestamp":1738160039227,"user_tz":-330,"elapsed":29,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["# Splitting into train and test data\n","\n","from sklearn.model_selection import train_test_split\n","Xtrain, Xtest, Ytrain, Ytest = train_test_split(features,target,test_size = 0.2,random_state =2)"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:24:50.571963Z","iopub.execute_input":"2024-03-12T19:24:50.572376Z","iopub.status.idle":"2024-03-12T19:24:50.585435Z","shell.execute_reply.started":"2024-03-12T19:24:50.572342Z","shell.execute_reply":"2024-03-12T19:24:50.58442Z"},"trusted":true,"id":"sFOfdgqd6DQ3","executionInfo":{"status":"ok","timestamp":1738160039227,"user_tz":-330,"elapsed":28,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import cross_val_score"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:24:59.23615Z","iopub.execute_input":"2024-03-12T19:24:59.236598Z","iopub.status.idle":"2024-03-12T19:24:59.242195Z","shell.execute_reply.started":"2024-03-12T19:24:59.23656Z","shell.execute_reply":"2024-03-12T19:24:59.240927Z"},"trusted":true,"id":"KGtVtbBj6DQ4","executionInfo":{"status":"ok","timestamp":1738160039227,"user_tz":-330,"elapsed":27,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}}},"execution_count":19,"outputs":[]},{"cell_type":"markdown","source":["# Support Vector Machine (SVM)"],"metadata":{"id":"yuo1mFwN6DQ6"}},{"cell_type":"code","source":["from sklearn.svm import SVC\n","\n","SVM = SVC(gamma='auto')\n","\n","SVM.fit(Xtrain,Ytrain)\n","\n","predicted_values = SVM.predict(Xtest)\n","\n","x = metrics.accuracy_score(Ytest, predicted_values)\n","acc.append(x)\n","model.append('SVM')\n","print(\"SVM's Accuracy is: \", x)\n","\n","print(classification_report(Ytest,predicted_values))"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:26:00.904905Z","iopub.execute_input":"2024-03-12T19:26:00.905483Z","iopub.status.idle":"2024-03-12T19:26:01.36332Z","shell.execute_reply.started":"2024-03-12T19:26:00.905431Z","shell.execute_reply":"2024-03-12T19:26:01.362198Z"},"trusted":true,"id":"H2iI15Ub6DQ6","executionInfo":{"status":"ok","timestamp":1738160039227,"user_tz":-330,"elapsed":27,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"7f571080-2fe4-4819-f931-54bbd5e9160c"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["SVM's Accuracy is:  0.7722222222222223\n","              precision    recall  f1-score   support\n","\n","   blackgram       1.00      1.00      1.00        18\n","    chickpea       0.88      0.94      0.91        16\n"," kidneybeans       1.00      0.64      0.78        22\n","      lentil       1.00      0.69      0.82        26\n","       maize       1.00      0.55      0.71        20\n","   mothbeans       1.00      0.57      0.72        23\n","    mungbean       1.00      0.95      0.98        21\n","  pigeonpeas       0.34      1.00      0.51        20\n","        rice       1.00      0.71      0.83        14\n","\n","    accuracy                           0.77       180\n","   macro avg       0.91      0.78      0.81       180\n","weighted avg       0.92      0.77      0.80       180\n","\n"]}]},{"cell_type":"code","source":["# Cross validation score (SVM)\n","score = cross_val_score(SVM,features,target,cv=5)\n","score"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:26:02.119797Z","iopub.execute_input":"2024-03-12T19:26:02.120308Z","iopub.status.idle":"2024-03-12T19:26:03.996073Z","shell.execute_reply.started":"2024-03-12T19:26:02.120271Z","shell.execute_reply":"2024-03-12T19:26:03.995106Z"},"trusted":true,"id":"8aqc31ax6DQ6","executionInfo":{"status":"ok","timestamp":1738160039227,"user_tz":-330,"elapsed":24,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"d6ca22e3-3b37-443a-dcb8-3ff8b43893c6"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.85      , 0.8       , 0.75      , 0.77777778, 0.71111111])"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["# Logistic Regression"],"metadata":{"id":"ov2e80rf6DQ6"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","\n","LogReg = LogisticRegression(random_state=2)\n","\n","LogReg.fit(Xtrain,Ytrain)\n","\n","predicted_values = LogReg.predict(Xtest)\n","\n","x = metrics.accuracy_score(Ytest, predicted_values)\n","acc.append(x)\n","model.append('Logistic Regression')\n","print(\"Logistic Regression's Accuracy is: \", x)\n","\n","print(classification_report(Ytest,predicted_values))"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:26:06.330652Z","iopub.execute_input":"2024-03-12T19:26:06.331056Z","iopub.status.idle":"2024-03-12T19:26:06.691275Z","shell.execute_reply.started":"2024-03-12T19:26:06.331019Z","shell.execute_reply":"2024-03-12T19:26:06.689364Z"},"trusted":true,"id":"ckJkSbru6DQ7","executionInfo":{"status":"ok","timestamp":1738160039227,"user_tz":-330,"elapsed":21,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"27bbae9b-31d7-4091-c9c1-9ef7a70f94ce"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Logistic Regression's Accuracy is:  0.8555555555555555\n","              precision    recall  f1-score   support\n","\n","   blackgram       1.00      0.94      0.97        18\n","    chickpea       0.60      0.75      0.67        16\n"," kidneybeans       0.80      0.73      0.76        22\n","      lentil       0.85      0.65      0.74        26\n","       maize       1.00      0.90      0.95        20\n","   mothbeans       1.00      1.00      1.00        23\n","    mungbean       0.69      0.95      0.80        21\n","  pigeonpeas       0.94      0.85      0.89        20\n","        rice       0.93      1.00      0.97        14\n","\n","    accuracy                           0.86       180\n","   macro avg       0.87      0.86      0.86       180\n","weighted avg       0.87      0.86      0.86       180\n","\n"]}]},{"cell_type":"code","source":["# Cross validation score (Logistic Regression)\n","score = cross_val_score(LogReg,features,target,cv=5)\n","score"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:26:06.833241Z","iopub.execute_input":"2024-03-12T19:26:06.833643Z","iopub.status.idle":"2024-03-12T19:26:08.392828Z","shell.execute_reply.started":"2024-03-12T19:26:06.833609Z","shell.execute_reply":"2024-03-12T19:26:08.39072Z"},"trusted":true,"id":"m-O2UPqO6DQ7","executionInfo":{"status":"ok","timestamp":1738160039917,"user_tz":-330,"elapsed":709,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"5c8b0c0c-0989-4c7e-b18d-8366dc2e75ad"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.88333333, 0.83333333, 0.83888889, 0.87222222, 0.87777778])"]},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","source":["### Saving trained Logistic Regression model"],"metadata":{"id":"2sw6jPz-6DQ7"}},{"cell_type":"markdown","source":["# Random Forest"],"metadata":{"id":"wiu4ROwS6DRE"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","\n","RF = RandomForestClassifier(n_estimators=40, random_state=0)\n","RF.fit(Xtrain,Ytrain)\n","\n","predicted_values = RF.predict(Xtest)\n","\n","x = metrics.accuracy_score(Ytest, predicted_values)\n","acc.append(x)\n","model.append('RF')\n","print(\"RF's Accuracy is: \", x)\n","\n","print(classification_report(Ytest,predicted_values))"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:26:19.143723Z","iopub.execute_input":"2024-03-12T19:26:19.144551Z","iopub.status.idle":"2024-03-12T19:26:19.319221Z","shell.execute_reply.started":"2024-03-12T19:26:19.144484Z","shell.execute_reply":"2024-03-12T19:26:19.31811Z"},"trusted":true,"id":"o3Xfbc-b6DRF","executionInfo":{"status":"ok","timestamp":1738160039917,"user_tz":-330,"elapsed":11,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"2acf08d4-11f1-477d-876d-3f0602a791ec"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["RF's Accuracy is:  1.0\n","              precision    recall  f1-score   support\n","\n","   blackgram       1.00      1.00      1.00        18\n","    chickpea       1.00      1.00      1.00        16\n"," kidneybeans       1.00      1.00      1.00        22\n","      lentil       1.00      1.00      1.00        26\n","       maize       1.00      1.00      1.00        20\n","   mothbeans       1.00      1.00      1.00        23\n","    mungbean       1.00      1.00      1.00        21\n","  pigeonpeas       1.00      1.00      1.00        20\n","        rice       1.00      1.00      1.00        14\n","\n","    accuracy                           1.00       180\n","   macro avg       1.00      1.00      1.00       180\n","weighted avg       1.00      1.00      1.00       180\n","\n"]}]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","from sklearn import metrics\n","from sklearn.metrics import classification_report\n","import pickle\n","\n","# Assuming Xtrain, Ytrain, Xtest, Ytest are already defined\n","RF = RandomForestClassifier(n_estimators=40, random_state=0)\n","RF.fit(Xtrain, Ytrain)\n","\n","predicted_values = RF.predict(Xtest)\n","x = metrics.accuracy_score(Ytest, predicted_values)\n","print(\"RF's Accuracy is: \", x)\n","print(classification_report(Ytest, predicted_values))\n","\n","# Save the model to a pickle file\n","with open('rf_model.pkl', 'wb') as f:\n","    pickle.dump(RF, f)\n"],"metadata":{"id":"IPrUpnoGlMjb","executionInfo":{"status":"ok","timestamp":1738160039917,"user_tz":-330,"elapsed":8,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"0769900c-c35d-4947-b08d-bc62806035f6"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["RF's Accuracy is:  1.0\n","              precision    recall  f1-score   support\n","\n","   blackgram       1.00      1.00      1.00        18\n","    chickpea       1.00      1.00      1.00        16\n"," kidneybeans       1.00      1.00      1.00        22\n","      lentil       1.00      1.00      1.00        26\n","       maize       1.00      1.00      1.00        20\n","   mothbeans       1.00      1.00      1.00        23\n","    mungbean       1.00      1.00      1.00        21\n","  pigeonpeas       1.00      1.00      1.00        20\n","        rice       1.00      1.00      1.00        14\n","\n","    accuracy                           1.00       180\n","   macro avg       1.00      1.00      1.00       180\n","weighted avg       1.00      1.00      1.00       180\n","\n"]}]},{"cell_type":"markdown","source":["### Saving trained Random Forest model"],"metadata":{"id":"QCvGvKRl6DRF"}},{"cell_type":"code","source":["import pickle\n","# Dump the trained Naive Bayes classifier with Pickle\n","RF_pkl_filename = 'RandomForest4.pkl'\n","# Open the file to save as pkl file\n","RF_Model_pkl = open(RF_pkl_filename, 'wb')\n","pickle.dump(RF, RF_Model_pkl)\n","\n","# Close the pickle instances\n","RF_Model_pkl.close()\n"],"metadata":{"trusted":true,"id":"jPl8KuD66DRF","executionInfo":{"status":"ok","timestamp":1738160039917,"user_tz":-330,"elapsed":6,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=[10,5],dpi = 100)\n","plt.title('Accuracy Comparison')\n","plt.xlabel('Accuracy')\n","plt.ylabel('Algorithm')\n","sns.barplot(x = acc,y = model,palette='dark')"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:26:33.83742Z","iopub.execute_input":"2024-03-12T19:26:33.837796Z","iopub.status.idle":"2024-03-12T19:26:34.032625Z","shell.execute_reply.started":"2024-03-12T19:26:33.837762Z","shell.execute_reply":"2024-03-12T19:26:34.03178Z"},"trusted":true,"id":"40O-KKT56DRH","executionInfo":{"status":"ok","timestamp":1738160040680,"user_tz":-330,"elapsed":768,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}},"colab":{"base_uri":"https://localhost:8080/","height":504},"outputId":"49126712-778c-4b13-85ec-67b91b1d90c0"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: title={'center': 'Accuracy Comparison'}, xlabel='Accuracy', ylabel='Algorithm'>"]},"metadata":{},"execution_count":27},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Making a prediction"],"metadata":{"id":"jU3FsScB6DRH"}},{"cell_type":"code","source":["import numpy as np\n","\n","# Example features\n","temperature = 26\n","humidity = 80\n","water_availability = 182\n","season = 1\n","# rainy = 1\n","# winter = 2\n","# spring = 3\n","# summer = 4\n","\n","data = np.array([[temperature, humidity, water_availability, season]])\n","\n","# Make prediction\n","prediction = RF.predict(data)\n","print(prediction)\n","\n","\n"],"metadata":{"execution":{"iopub.status.busy":"2024-03-12T19:30:47.209626Z","iopub.execute_input":"2024-03-12T19:30:47.210054Z","iopub.status.idle":"2024-03-12T19:30:47.223973Z","shell.execute_reply.started":"2024-03-12T19:30:47.210019Z","shell.execute_reply":"2024-03-12T19:30:47.222867Z"},"trusted":true,"id":"Awg0x4nU6DRH","executionInfo":{"status":"ok","timestamp":1738160040680,"user_tz":-330,"elapsed":6,"user":{"displayName":"Bhargav Hegde","userId":"00436514669652607248"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"3850c7ea-759c-4bc8-b15d-01d2dac6a260"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["['rice']\n"]}]}]}